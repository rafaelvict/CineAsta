<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Subscription extends \AppBundle\Entity\Subscription implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'created', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'duration', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'method', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'pack', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'infos', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'status', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'currency', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'price', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'transaction', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'started', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'expired', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'file', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'media'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'created', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'duration', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'method', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'pack', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'infos', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'status', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'currency', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'price', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'transaction', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'started', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'expired', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'file', '' . "\0" . 'AppBundle\\Entity\\Subscription' . "\0" . 'media'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Subscription $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\UserBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMethod', []);

        return parent::getMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function setMethod($method)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMethod', [$method]);

        return parent::setMethod($method);
    }

    /**
     * {@inheritDoc}
     */
    public function getPack()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPack', []);

        return parent::getPack();
    }

    /**
     * {@inheritDoc}
     */
    public function setPack($pack)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPack', [$pack]);

        return parent::setPack($pack);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', []);

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', [$currency]);

        return parent::setCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransaction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransaction', []);

        return parent::getTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransaction($transaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransaction', [$transaction]);

        return parent::setTransaction($transaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getStarted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStarted', []);

        return parent::getStarted();
    }

    /**
     * {@inheritDoc}
     */
    public function setStarted($started)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStarted', [$started]);

        return parent::setStarted($started);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpired', []);

        return parent::getExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpired($expired)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpired', [$expired]);

        return parent::setExpired($expired);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedia', []);

        return parent::getMedia();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedia($media)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedia', [$media]);

        return parent::setMedia($media);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', []);

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile($file)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', [$file]);

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getInfos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInfos', []);

        return parent::getInfos();
    }

    /**
     * {@inheritDoc}
     */
    public function setInfos($infos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInfos', [$infos]);

        return parent::setInfos($infos);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuration', []);

        return parent::getDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuration($duration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuration', [$duration]);

        return parent::setDuration($duration);
    }

}
