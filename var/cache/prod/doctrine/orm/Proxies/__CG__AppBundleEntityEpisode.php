<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Episode extends \AppBundle\Entity\Episode implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'title', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'slug', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'duration', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'playas', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'downloadas', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'enabled', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'position', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'season', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'thumbnail', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'downloads', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'views', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'created', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'media', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'file', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'sourceurl', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'sourcetype', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'sourcefile', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'subtitles', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'sources'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'title', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'slug', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'duration', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'playas', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'downloadas', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'enabled', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'position', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'season', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'thumbnail', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'downloads', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'views', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'created', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'media', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'file', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'sourceurl', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'sourcetype', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'sourcefile', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'subtitles', '' . "\0" . 'AppBundle\\Entity\\Episode' . "\0" . 'sources'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Episode $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeason()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeason', []);

        return parent::getSeason();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeason($season)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeason', [$season]);

        return parent::setSeason($season);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getThumbnail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThumbnail', []);

        return parent::getThumbnail();
    }

    /**
     * {@inheritDoc}
     */
    public function setThumbnail($thumbnail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThumbnail', [$thumbnail]);

        return parent::setThumbnail($thumbnail);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', []);

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile($file)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', [$file]);

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', []);

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getSourceurl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourceurl', []);

        return parent::getSourceurl();
    }

    /**
     * {@inheritDoc}
     */
    public function setSourceurl($sourceurl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSourceurl', [$sourceurl]);

        return parent::setSourceurl($sourceurl);
    }

    /**
     * {@inheritDoc}
     */
    public function getSourcetype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourcetype', []);

        return parent::getSourcetype();
    }

    /**
     * {@inheritDoc}
     */
    public function setSourcetype($sourcetype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSourcetype', [$sourcetype]);

        return parent::setSourcetype($sourcetype);
    }

    /**
     * {@inheritDoc}
     */
    public function getSourcefile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourcefile', []);

        return parent::getSourcefile();
    }

    /**
     * {@inheritDoc}
     */
    public function setSourcefile($sourcefile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSourcefile', [$sourcefile]);

        return parent::setSourcefile($sourcefile);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedia', []);

        return parent::getMedia();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedia($media)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedia', [$media]);

        return parent::setMedia($media);
    }

    /**
     * {@inheritDoc}
     */
    public function addSubtitle(\AppBundle\Entity\Subtitle $subtitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubtitle', [$subtitle]);

        return parent::addSubtitle($subtitle);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubtitle(\AppBundle\Entity\Subtitle $subtitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubtitle', [$subtitle]);

        return parent::removeSubtitle($subtitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtitles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtitles', []);

        return parent::getSubtitles();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubtitles($subtitles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubtitles', [$subtitles]);

        return parent::setSubtitles($subtitles);
    }

    /**
     * {@inheritDoc}
     */
    public function addSource(\AppBundle\Entity\Source $sources)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSource', [$sources]);

        return parent::addSource($sources);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSource(\AppBundle\Entity\Source $sources)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSource', [$sources]);

        return parent::removeSource($sources);
    }

    /**
     * {@inheritDoc}
     */
    public function getSources()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSources', []);

        return parent::getSources();
    }

    /**
     * {@inheritDoc}
     */
    public function setSources($sources)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSources', [$sources]);

        return parent::setSources($sources);
    }

    /**
     * {@inheritDoc}
     */
    public function getViews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViews', []);

        return parent::getViews();
    }

    /**
     * {@inheritDoc}
     */
    public function setViews($views)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setViews', [$views]);

        return parent::setViews($views);
    }

    /**
     * {@inheritDoc}
     */
    public function getDownloads()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDownloads', []);

        return parent::getDownloads();
    }

    /**
     * {@inheritDoc}
     */
    public function setDownloads($downloads)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDownloads', [$downloads]);

        return parent::setDownloads($downloads);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlayas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlayas', []);

        return parent::getPlayas();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlayas($playas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlayas', [$playas]);

        return parent::setPlayas($playas);
    }

    /**
     * {@inheritDoc}
     */
    public function getDownloadas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDownloadas', []);

        return parent::getDownloadas();
    }

    /**
     * {@inheritDoc}
     */
    public function setDownloadas($downloadas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDownloadas', [$downloadas]);

        return parent::setDownloadas($downloadas);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuration', []);

        return parent::getDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuration($duration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuration', [$duration]);

        return parent::setDuration($duration);
    }

    /**
     * {@inheritDoc}
     */
    public function getDownloadsnumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDownloadsnumber', []);

        return parent::getDownloadsnumber();
    }

    /**
     * {@inheritDoc}
     */
    public function getViewsnumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViewsnumber', []);

        return parent::getViewsnumber();
    }

    /**
     * {@inheritDoc}
     */
    public function number_format_short($n)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'number_format_short', [$n]);

        return parent::number_format_short($n);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

}
